<?xml version="1.0"?>

<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
         xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
         xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
         xmlns:xacro="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
         name="hector_ugv">
         
  <include filename="$(find hector_xacro_tools)/urdf/inertia_tensors.urdf.xacro" />
  <include filename="$(find hector_xacro_tools)/urdf/sensor_macros.urdf.xacro" />
  <include filename="$(find hector_sensors_description)/urdf/thermaleye_camera.urdf.xacro" />
  <include filename="$(find hector_sensors_description)/urdf/kinect_camera.urdf.xacro" />
  
  <macro name="hector_ugv_base"  params="wheel_joint_type">
<!--  <link name="base_link">
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.1" ixy="0.0" ixz="0.0"
               iyy="0.1" iyz="0.0"
               izz="0.1" />
      </inertial>

    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
      </geometry>
      <material name="Grey" />
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
      </geometry>
    </collision>
  </link>

  <joint name="socket_base_joint" type="fixed" >
    <origin xyz="0 0 ${-base_size_z/2 - socket_size_z/2}" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="socket_link"/>
  </joint>-->

  <link name="base_link">
<!--    <inertial>
      <mass value="5.0" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.1" ixy="0.0" ixz="0.0"
               iyy="0.1" iyz="0.0"
               izz="0.1" />
      </inertial>-->
    <inertial_cuboid mass="5.0" x_length="0.3" y_length="0.15" z_length = "0.2"/>

    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://hector_ugv_description/meshes/hector_common_base.dae"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
          <mesh filename="package://hector_ugv_description/meshes/hector_common_base.stl"/>
      </geometry>
    </collision>
  </link>

  <joint name="top_box_joint" type="fixed" >
    <origin xyz="0 0 0.078" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="top_box_link" />
  </joint>
  
  <link name="top_box_link">
    <inertial_cuboid mass="0.1" x_length="0.3" y_length="0.15" z_length = "0.2"/>

    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
          <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
          <geometry>
           <mesh filename="package://hector_ugv_description/meshes/hector1_top_box$(optenv TEST_SELF_FILTER).dae"/>
           
          </geometry>
    </visual>

    <collision>
      <origin xyz="${top_box_pos_x} ${top_box_pos_y} ${top_box_pos_z}" rpy="0 0 0" />
      <geometry>
          
          <box size="${top_box_size_x} ${top_box_size_y} ${top_box_size_z}" />
          
      </geometry>
    </collision>
  </link>

<!--  <joint name="socket_middle_ultrasound_joint" type="fixed" >
    <origin xyz="${-socket_size_x/2 + middle_ultrasound_x_position} 0 ${socket_size_z/2 + ultrasound_z_position}" rpy="0 0 ${M_PI}" />
    <parent link="socket_link" />
    <child link="middle_ultrasound_frame"/>
  </joint>

  <link name="middle_ultrasound_frame">
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0" ixz="0"
               iyy="0.000001" iyz="0"
         izz="0.0001" />
    </inertial>
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="0.001 0.01 0.01" />
      </geometry>
        <material name="Red" />
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="0.001 0.01 0.01" />
      </geometry>
    </collision>
  </link>

  <joint name="socket_left_ultrasound_joint" type="fixed" >
    <origin xyz="${-socket_size_x/2 + sideways_ultrasound_x_position} ${sideways_ultrasound_y_position} ${socket_size_z/2 + ultrasound_z_position}" rpy="0 0 ${M_PI - sideways_ultrasound_theta}" />
    <parent link="socket_link" />
    <child link="left_ultrasound_frame"/>
  </joint>

  <link name="left_ultrasound_frame">
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0" ixz="0"
               iyy="0.000001" iyz="0"
         izz="0.0001" />
    </inertial>
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="0.001 0.01 0.01" />
      </geometry>
        <material name="Red" />
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="0.01 0.01 0.001" />
      </geometry>
    </collision>
  </link>

  <joint name="socket_right_ultrasound_joint" type="fixed" >
    <origin xyz="${-socket_size_x/2 + sideways_ultrasound_x_position} ${-sideways_ultrasound_y_position} ${socket_size_z/2 + ultrasound_z_position}" rpy="0 0 ${M_PI + sideways_ultrasound_theta}" />
    <parent link="socket_link" />
    <child link="right_ultrasound_frame"/>
  </joint>

  <link name="right_ultrasound_frame">
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0" ixz="0"
               iyy="0.000001" iyz="0"
         izz="0.0001" />
    </inertial>
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="0.001 0.01 0.01" />
      </geometry>
        <material name="Red" />
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="0.01 0.01 0.001" />
      </geometry>
    </collision>
  </link>-->

<!--  <joint name="base_top_joint" type="fixed" >
    <origin xyz="0 0 ${base_size_z/2 + top_size_z/2}" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="top_link" />
  </joint>



  <link name="top_link">
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.1" ixy="0.0" ixz="0.0"
               iyy="0.1" iyz="0.0"
               izz="0.1" />
      </inertial>

    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="${top_size_x} ${top_size_y} ${top_size_z}" />
      </geometry>
      <material name="Green" />
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="${top_size_x} ${top_size_y} ${top_size_z}" />
      </geometry>
    </collision>
  </link>-->

  <joint name="laser1/x" type="revolute" >
    <origin xyz="${x_vision_box_front} 0 ${laser1RollServo_height}" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="laser1RollServo" />
    <axis xyz="1 0 0" />
    <limit lower="${-M_PI/2}" upper="${M_PI/2}" effort="100" velocity="100" />
  </joint>

  <link name="laser1RollServo">
    <inertial_sphere mass="0.1" diameter="0.07" />

    <visual>
      <origin xyz="${laser1RollServo_size_x/2} 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="${laser1RollServo_size_x} ${laser1RollServo_size_y} ${laser1RollServo_size_z}" />
      </geometry>
      <material name="Blue" />
    </visual>

    <collision>
      <origin xyz="${laser1RollServo_size_x/2} 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="${laser1RollServo_size_x} ${laser1RollServo_size_y} ${laser1RollServo_size_z}" />
      </geometry>
    </collision>
  </link>

  <joint name="laser1/y" type="revolute" >
    <origin xyz="${laser1RollServo_size_x} 0 0" rpy="0 0 0" />
    <parent link="laser1RollServo" />
    <child link="laser1_link" />
    <axis xyz="0 1 0" />
    <limit lower="${-M_PI/2}" upper="${M_PI/2}" effort="100" velocity="100" />
  </joint>

  <link name="laser1_link">
    <inertial_sphere mass="0.1" diameter="0.07" />

    <visual>
      <origin xyz="0.0 0.0 ${laser1_size_z/2}" rpy="0 0 0" />
      <geometry>
        <!--<box size="${laser1_size_x} ${laser1_size_y} ${laser1_size_z}" />-->
        <box size="${laser1_size_x} ${laser1_size_y} 0.01" />
      </geometry>
      <material name="Grey" />
    </visual>

    <collision>
      <origin xyz="0.0 0.0 ${laser1_size_z/2}" rpy="0 0 0" />
      <geometry>
        <!--<box size="${laser1_size_x} ${laser1_size_y} ${laser1_size_z}" />-->
        <box size="${laser1_size_x} ${laser1_size_y} 0.01" />
      </geometry>
    </collision>
  </link>

<!--  <joint name="laser1_link_laser1_frame_joint" type="fixed" >
    <origin xyz="${laser1_center_x_offset} 0 ${laser1_plane_height}" rpy="0 0 0" />
    <parent link="laser1_link" />
    <child link="laser1_frame" />
  </joint>

  <link name="laser1_frame">
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0" ixz="0"
               iyy="0.000001" iyz="0"
               izz="0.0001" />
    </inertial>
    <visual>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="0.001 0.001 0.0001" />
      </geometry>
        <material name="Red" />
    </visual>

    <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="0.001 0.001 0.001" />
      </geometry>
    </collision>
  </link>-->

  <joint name="camera/z" type="revolute" >
    <origin xyz="${x_pos_sensor_head_rel_to_base_link} 0 0.215" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="cameraYawServo" />
    <axis xyz="0 0 1" />
    <limit lower="${-M_PI*3/4}" upper="${M_PI*3/4}" effort="100" velocity="100" />
  </joint>

  <link name="cameraYawServo">
    <inertial_sphere mass="0.1" diameter="0.07" />

    <visual>
      <origin xyz="0.0 0.0 ${cameraYawServo_size_z/2}" rpy="0 0 0" />
      <geometry>
        <box size="${cameraYawServo_size_x} ${cameraYawServo_size_y} ${cameraYawServo_size_z}" />
      </geometry>
      <material name="Blue" />
    </visual>

    <collision>
      <origin xyz="0.0 0.0 ${cameraYawServo_size_z/2}" rpy="0 0 0" />
      <geometry>
        <box size="${cameraYawServo_size_x} ${cameraYawServo_size_y} ${cameraYawServo_size_z}" />
      </geometry>
    </collision>
  </link>

  <joint name="camera/y" type="revolute" >
    <origin xyz="0 0 ${cameraYawServo_size_z}" rpy="0 0 0" />
    <parent link="cameraYawServo" />
    <child link="mounting_link" />
    <axis xyz="0 1 0" />
    <limit lower="${-M_PI/2}" upper="${M_PI/2}" effort="100" velocity="100" />
  </joint>

  <link name="mounting_link" >
    <inertial_sphere mass="0.05" diameter="0.07" />
<!--    <visual>
      <origin xyz="0 0 0.002" rpy="0 0 0" />
      <geometry>
        <box size="0.02 0.06 0.004" />
      </geometry>
      <material name="Grey" />
    </visual>

    <collision>
      <origin xyz="0 0 0.002" rpy="0 0 0" />
      <geometry>
        <box size="0.02 0.06 0.004" />
      </geometry>
    </collision>-->
  </link>

<!--  <joint name="mounting_link_camera_frame_joint" type="fixed" >
    <origin xyz="${camera_x_position} ${camera_y_position} ${camera_z_position}" rpy="0 0 0" />
    <parent link="mounting_link" />
    <child link="camera_frame" />
  </joint>

  <link name="camera_frame">
    <inertial_sphere mass="0.01" diameter="0.07" />

    <visual>
      <origin xyz="${-camera_size_x/2} 0 0" />
      <geometry>
        <box size="${camera_size_x} ${camera_size_y} ${camera_size_z}" />
      </geometry>
      <material name="Grey" />
    </visual>

    <collision>
      <origin xyz="${-camera_size_x/2} 0 0" />
      <geometry>
        <box size="${camera_size_x} ${camera_size_y} ${camera_size_z}" />
      </geometry>
    </collision>
  </link>-->
  
<!--   <xacro:thermaleye_camera_model name="infrared" parent="mounting_link"> 
     <origin xyz="${infrared_x_position} ${infrared_y_position} ${infrared_z_position}" rpy="0 0 0" />
   </xacro:thermaleye_camera_model>
  
   <xacro:kinect_camera_model name="openni_camera" parent="mounting_link"> 
     <origin xyz="${kinect_x_position} 0 ${kinect_z_position}" rpy="0 0 0" />
   </xacro:kinect_camera_model>

   <include filename="$(find monstertruck_urdf)/hector/$(env ROBOT)_addons.urdf.xacro" />-->
  
  <hector_wheel parent="base_link" prefix="Front" suffix="left" reflect_x="1" reflect_y="1" wheel_joint_type="${wheel_joint_type}" />
  <hector_wheel parent="base_link" prefix="Front" suffix="right" reflect_x="1" reflect_y="-1" wheel_joint_type="${wheel_joint_type}" />
  <hector_wheel parent="base_link" prefix="Rear" suffix="left" reflect_x="-1" reflect_y="1" wheel_joint_type="${wheel_joint_type}"/>
  <hector_wheel parent="base_link" prefix="Rear" suffix="right" reflect_x="-1" reflect_y="-1" wheel_joint_type="${wheel_joint_type}"/>

  </macro>

  
  </robot>
